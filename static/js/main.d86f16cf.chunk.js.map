{"version":3,"sources":["App/Nav/Nav.tsx","App/getFormatComment.tsx","APIs.ts","App/MultipleAnalyses/drawPieCharts.ts","App/MultipleAnalyses/dataProcesser.ts","App/MultipleAnalyses/useMultipleAnalyses.ts","App/useApp.ts","App/SingleAnalyses/SingleAnalyses.tsx","App/SingleAnalyses/useSingleAnalyses.ts","App/MultipleAnalyses/MultipleAnalyses.tsx","App/App.tsx","index.tsx"],"names":["Nav","tabs","currentTab","goToTab","data-selected-index","map","tab","idx","onClick","name","getFormatComment","commentText","textFeatures","words","split","feature_i","word_start","word_end","eles","length","push","slice","join","wordIndexs","className","baseURL","fetchResults","comments","a","fetch","method","body","JSON","stringify","response","json","responseJson","data","drawPieCharts","Element","echarts","setOption","tooltip","trigger","legend","top","left","series","type","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","position","labelLine","dataProcesser","getDataForAttitudePie","dataArray","reduce","acc","cur","includes","attitude","value","getDataForDimensionPie","results","result","word","flat","arr","i","defaultResults","component","useState","setCommentText","setAttitude","setTextFeatures","reply","setReply","textAreaRef","React","createRef","current","analyze","useSingleAnalyses","id","item","index","ref","setResults","inputData","setInputData","inputFileRef","dimensionPieChartRef","attitudePieChartRef","files","parse","newResult","old","useEffect","dp","inputFileOnChange","fileReader","FileReader","onload","e","target","toString","readAsText","useMultipleAnalyses","onChange","style","display","App","eventsHandle","setCurrentTab","tabIndex","getEventsHandle","useApp","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d86f16cf.chunk.js","sourcesContent":["import './Nav.css'\r\n\r\ninterface NavProps {\r\n    tabs: { name: string, component: () => JSX.Element }[]\r\n    currentTab: number,\r\n    goToTab: (to: number) => void\r\n}\r\n\r\nexport default function Nav({ tabs, currentTab, goToTab }: NavProps) {\r\n    return (\r\n        <nav>\r\n            <ul data-selected-index={currentTab + 1}>\r\n                {\r\n                    tabs.map((tab, idx) => (\r\n                        <li onClick={() => goToTab(idx)} key={idx}>\r\n                            {tab.name}\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav >\r\n    )\r\n}","export default function getFormatComment(commentText: string, textFeatures: {\n    words: [string, string][],\n    wordIndexs: [number, number][]\n}) {\n    if (!(textFeatures.words)) return ([<span>{commentText} </span>])\n    const words = commentText.split('')\n    let feature_i = 0\n    let word_start = 0\n    let word_end = 0\n    let eles = [] as JSX.Element[]\n    while (true) {\n        if (word_end >= words.length) break\n        if (feature_i >= textFeatures.words.length) {\n            eles.push(\n                <span>\n                    {words.slice(word_start, words.length).join('')}\n                </span>\n            )\n            break\n        }\n        if (word_end === textFeatures.wordIndexs[feature_i][0]) {\n            if (word_end !== word_start) {\n                eles.push(\n                    <span>\n                        {words.slice(word_start, word_end).join('')}\n                    </span>\n                )\n            }\n            eles.push(\n                <span className={'dms-span ' + textFeatures.words[feature_i][1]} >\n                    {words.slice(word_end, textFeatures.wordIndexs[feature_i][1]).join('')}\n                </span>\n            )\n            word_start = textFeatures.wordIndexs[feature_i][1]\n            word_end = word_start\n            feature_i++\n            continue\n        }\n        word_end++\n    }\n    return eles\n}","import { multipleAnalysesReturnsElement } from './types'\nconst baseURL = 'http://47.102.203.5'\n\nexport async function fetchResults(comments: string[]) {\n    const response = await fetch(`${baseURL}/analyze`, {\n        method: 'POST',\n        body: JSON.stringify(comments)\n    })\n    const responseJson = await response.json()\n    const data = responseJson.data\n    return data as multipleAnalysesReturnsElement[]\n}","import * as echarts from 'echarts'\r\nexport default function drawPieCharts(Element: HTMLDivElement | null, data: { value: number, name: string }[]) {\r\n    if (Element === null || data.length === 0) {\r\n        return\r\n    }\r\n    const myChart = echarts.init(Element)\r\n    myChart.setOption({\r\n        tooltip: { trigger: 'item' },\r\n        legend: {\r\n            top: '12px',\r\n            left: 'center'\r\n        },\r\n        series: [{\r\n            type: 'pie',\r\n            radius: ['24px', '60px'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n                borderRadius: 4,\r\n                borderColor: '#fff',\r\n                borderWidth: 2\r\n            },\r\n            label: {\r\n                show: false,\r\n                position: 'outside'\r\n            },\r\n            labelLine: {\r\n                show: false\r\n            },\r\n            data\r\n        }]\r\n    })\r\n}\r\n","import { multipleAnalysesReturnsElement } from '../../types'\r\n\r\nfunction getDataForDimensionPie(results: multipleAnalysesReturnsElement[]) {\r\n    const dimensions = results.map(result =>\r\n        result.textFeatures.words.map(word =>\r\n            word[1]\r\n        )\r\n    ).flat()\r\n\r\n    const pieData = dimensions.reduce((acc, cur, idx, arr) => {\r\n        for (let i in acc) {\r\n            if (acc[i].name === cur) {\r\n                acc[i].value++\r\n                return acc\r\n            }\r\n        }\r\n        return [...acc, { name: cur, value: 1 }]\r\n    }, [] as { name: string, value: number }[])\r\n    return pieData\r\n}\r\n\r\nfunction getDataForAttitudePie(dataArray: multipleAnalysesReturnsElement[]) {\r\n    // 这里放置处理逻辑，下面是预设的返回数据\r\n    const attitudes = dataArray.reduce((acc: string[], cur) => (\r\n        acc.includes(cur.attitude) ? acc : [...acc, cur.attitude]\r\n    ), [])\r\n\r\n    return attitudes.map(attitude => ({\r\n        name: attitude,\r\n        value: dataArray.reduce((acc, cur) =>\r\n            cur.attitude === attitude ? acc + 1 : acc, 0\r\n        )\r\n    }))\r\n}\r\n\r\nconst dataProcesser = {\r\n    getDataForAttitudePie,\r\n    getDataForDimensionPie\r\n}\r\n\r\nexport default dataProcesser","import React, { useState, useEffect } from 'react'\r\nimport drawPieCharts from './drawPieCharts'\r\nimport dp from './dataProcesser'\r\nimport { multipleAnalysesReturnsElement } from '../../types'\r\nimport { fetchResults } from '../../APIs'\r\n\r\nconst defaultInputData: string = ''\r\nconst defaultResults: multipleAnalysesReturnsElement[] = []\r\n\r\nexport default function useMultipleAnalyses() {\r\n    const [results, setResults] = useState(defaultResults)\r\n    const [inputData, setInputData] = useState(defaultInputData)\r\n\r\n    const inputFileRef = React.createRef<HTMLInputElement>()\r\n    const dimensionPieChartRef = React.createRef<HTMLDivElement>()\r\n    const attitudePieChartRef = React.createRef<HTMLDivElement>()\r\n\r\n    useEffect(() => {\r\n        drawPieCharts(dimensionPieChartRef.current, dp.getDataForDimensionPie(results))\r\n        drawPieCharts(attitudePieChartRef.current, dp.getDataForAttitudePie(results))\r\n    }, [results, dimensionPieChartRef, attitudePieChartRef])\r\n\r\n    async function analyze() {\r\n        setResults(() => [])\r\n        if (inputFileRef.current?.files?.length === 0) return\r\n        const comments = JSON.parse(inputData).data as string[]\r\n        for (let i in comments) {\r\n            let newResult = await fetchResults([comments[i]])\r\n            setResults(old => [...old, newResult[0]])\r\n        }\r\n    }\r\n\r\n    function inputFileOnChange() {\r\n        if (!(inputFileRef.current?.files)) return\r\n        if (!(inputFileRef.current?.files.length > 0)) return\r\n\r\n        const fileReader = new FileReader()\r\n        fileReader.onload = (e) => {\r\n            if (!(e.target?.result)) return\r\n            setInputData(e.target.result.toString())\r\n        }\r\n        fileReader.readAsText(inputFileRef.current?.files[0])\r\n    }\r\n\r\n    return {\r\n        results,\r\n        inputFileRef,\r\n        dimensionPieChartRef,\r\n        attitudePieChartRef,\r\n        analyze,\r\n        inputFileOnChange\r\n    }\r\n}","import { useState } from 'react';\r\nimport SingleAnalyses from './SingleAnalyses/SingleAnalyses'\r\nimport MultipleAnalyses from './MultipleAnalyses/MultipleAnalyses'\r\n\r\nconst tabs = [{\r\n    name: '单条分析',\r\n    component: SingleAnalyses\r\n}, {\r\n    name: '批量分析',\r\n    component: MultipleAnalyses\r\n}]\r\n\r\nconst getEventsHandle = ({ setCurrentTab }: { setCurrentTab: React.Dispatch<React.SetStateAction<number>> }) => {\r\n    return {\r\n        goToTab: (tabIndex: number) => setCurrentTab(tabIndex)\r\n    }\r\n}\r\n\r\nexport default function useApp() {\r\n    const [currentTab, setCurrentTab] = useState(0)\r\n\r\n    const eventsHandle = getEventsHandle({ setCurrentTab })\r\n\r\n    return {\r\n        tabs,\r\n        currentTab,\r\n        ...eventsHandle\r\n    }\r\n}\r\n","import getFormatComment from '../getFormatComment'\r\nimport './SingleAnalyses.css'\r\nimport useSingleAnalyses from './useSingleAnalyses'\r\n\r\nexport default function SingleAnalyses() {\r\n    const {\r\n        commentText,\r\n        attitude,\r\n        textFeatures,\r\n        textAreaRef,\r\n        analyze\r\n    } = useSingleAnalyses()\r\n\r\n    return (\r\n        <main id=\"single-analyses\" key=\"单条分析\">\r\n            <article className=\"introduction\">\r\n                <h1>使用说明</h1>\r\n                {\r\n                    [\r\n                        '该页面利用人工智能分析对手机产品的评论。',\r\n                        '输入评论内容，点击开始分析按钮，将输出其评论角度、评论态度。',\r\n                        '评论角度可分为外观、屏幕、充电、音效、拍照、运行、手感。',\r\n                        '评论态度可分为积极、消极、中性。'\r\n                    ].map((item, index) => <p key={index}>{item}</p>)\r\n                }\r\n            </article>\r\n            <article className=\"input-area\">\r\n                <h1>输入评论内容</h1>\r\n                <textarea className=\"text-area\" ref={textAreaRef} />\r\n                <button className=\"ms-button primary\" onClick={analyze}>开始分析</button>\r\n            </article>\r\n            <article className=\"output-area\">\r\n                <h1>分析结果</h1>\r\n                <h2>评论原文</h2>\r\n                <p>{getFormatComment(commentText, textFeatures)}</p>\r\n                <h2>评论态度</h2>\r\n                <p>{attitude}</p>\r\n            </article>\r\n        </main>\r\n    )\r\n}","import React, { useState } from \"react\"\r\nimport { fetchResults } from '../../APIs'\r\n\r\nexport default function useSingleAnalyses() {\r\n    const [commentText, setCommentText] = useState('等待输入评论')\r\n    const [attitude, setAttitude] = useState('等待输入评论')\r\n    const [textFeatures, setTextFeatures] = useState({} as { words: [string, string][], wordIndexs: [number, number][] })\r\n    const [reply, setReply] = useState('等待输入评论')\r\n\r\n    const textAreaRef = React.createRef<HTMLTextAreaElement>()\r\n\r\n    async function analyze() {\r\n        if (!(textAreaRef.current?.value)) return\r\n        const data = await fetchResults([textAreaRef.current?.value || ''])\r\n        setCommentText(data[0].commentText)\r\n        setAttitude(data[0].attitude)\r\n        setTextFeatures(data[0].textFeatures)\r\n        setReply(data[0].reply)\r\n    }\r\n\r\n    return {\r\n        commentText,\r\n        attitude,\r\n        reply,\r\n        textAreaRef,\r\n        textFeatures,\r\n        analyze\r\n    }\r\n}\r\n","import './MultipleAnalyses.css'\r\nimport useMultipleAnalyses from './useMultipleAnalyses'\r\nimport getFormatComment from '../getFormatComment'\r\n\r\nexport default function MultipleAnalyses() {\r\n    const {\r\n        results,\r\n        inputFileRef,\r\n        dimensionPieChartRef,\r\n        attitudePieChartRef,\r\n        analyze,\r\n        inputFileOnChange\r\n    } = useMultipleAnalyses()\r\n    return (\r\n        <main id=\"multiple-analyses\" key=\"多条分析\">\r\n            <article className=\"introduction\">\r\n                <h1>使用说明</h1>\r\n                {\r\n                    [\r\n                        '该页面利用人工智能分析对手机产品的评论。',\r\n                        '导入数据文件，点击开始分析按钮，将输出各条评论对应的评论角度、评论态度，以及统计数据。',\r\n                        '数据文件要求为 JSON 文件，格式为：{ \"data\" : string[] } 。',\r\n                        '输入评论内容，点击开始分析按钮，将输出其评论角度、评论态度。',\r\n                        '评论角度可分为外观、屏幕、充电、音效、拍照、运行、手感。',\r\n                        '评论态度可分为积极、消极、中性。'\r\n                    ].map((item, index) => (\r\n                        <p key={index}>{item}</p>\r\n                    ))\r\n                }\r\n            </article>\r\n            <article className=\"import-area\">\r\n                <h1>导入文件</h1>\r\n                <p>\r\n                    <input type=\"file\" ref={inputFileRef} onChange={inputFileOnChange} />\r\n                </p>\r\n                <button className=\"ms-button primary\" onClick={analyze}>开始分析</button>\r\n            </article>\r\n            <article className=\"statistical-results-area\">\r\n                <h1>统计结果</h1>\r\n                <section>\r\n                    <h2>各角度评论占比</h2>\r\n                    <p style={{ display: results.length === 0 ? 'inline' : 'none' }}>\r\n                        {'等待导入数据'}\r\n                    </p>\r\n                    <div\r\n                        id=\"dimensionPieChart\"\r\n                        ref={dimensionPieChartRef}\r\n                        style={{ display: results.length === 0 ? 'none' : 'block' }}>\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    <h2>各态度评论占比</h2>\r\n                    <p style={{ display: results.length === 0 ? 'inline' : 'none' }}>\r\n                        {'等待导入数据'}\r\n                    </p>\r\n                    <div\r\n                        id=\"attitudePieChart\"\r\n                        ref={attitudePieChartRef}\r\n                        style={{ display: results.length === 0 ? 'none' : 'block' }}>\r\n                    </div>\r\n                </section>\r\n            </article>\r\n            <article className=\"results-area\">\r\n                <h1>各条评论分析结果</h1>\r\n                <p style={{ display: results.length === 0 ? 'inline' : 'none' }}>\r\n                    {'等待导入数据'}\r\n                </p>\r\n                {\r\n                    results.map((result, index) => (\r\n                        <article className=\"result-item\" key={index}>\r\n                            <h2 className=\"result-item-commentText\">评论原文</h2>\r\n                            <p>\r\n                                {\r\n                                    getFormatComment(result.commentText, result.textFeatures)\r\n                                }\r\n                            </p>\r\n                            <h2 className=\"result-item-attitude\">评论态度</h2>\r\n                            <p>{result.attitude}</p>\r\n                        </article>\r\n                    ))\r\n                }\r\n            </article>\r\n        </main>\r\n    )\r\n}","import './App.css'\r\nimport Nav from './Nav/Nav'\r\nimport useApp from './useApp'\r\n\r\nfunction App() {\r\n  const { tabs, currentTab, goToTab } = useApp()\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav tabs={tabs} currentTab={currentTab} goToTab={goToTab} />\r\n      <div className=\"tab-shaper\">\r\n        <div className=\"tab-container\">\r\n          {\r\n            tabs.filter((tab, idx) => idx === currentTab)\r\n              .map(tab =>\r\n                <tab.component />\r\n              )\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App/App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}